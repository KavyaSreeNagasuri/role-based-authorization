{"version":3,"sources":["redux/actions.js","components/login/login.js","components/login/index.js","components/home/dashboard.js","components/home/pendingLeaves.js","components/home/approvedLeaves.js","components/home/newLeaves.js","components/home/myleaves.js","components/home/index.js","App.js","redux/states.js","redux/reducers.js","redux/store.js","index.js"],"names":["CHECK_USER","LOG_OUT","ADD_LEAVE","APPROVE_LEAVE","LoginPage","useSelector","state","loginData","isInvalidUser","loginStatus","dispatch","useDispatch","to","className","initialValues","username","password","validationSchema","Yup","shape","email","required","min","onSubmit","values","resetForm","setTimeout","type","payload","errors","touched","isSubmitting","name","disabled","LoginComponent","props","Fragment","Dashboard","loggedInDetails","leavesData","pendingLeaves","filter","leave","status","approvedLeaves","role","length","lastLogged","PendingLeaves","onApprove","scope","map","index","createdBy","leaveType","moment","startDate","format","endDate","leaveCount","onClick","createdAt","ApprovedLeaves","NewLeave","useState","isSuccess","setSuccess","notRequired","setFieldValue","setFieldError","isValid","onFieldChange","event","target","value","temp","firstDate","Date","secondDate","diffDays","Math","round","abs","getTime","onChange","MyLeaves","sortedLeavesData","sort","a","b","HomePage","exact","path","component","from","withRouter","leavesList","users","id","isLogged","allReducers","combineReducers","action","findIndex","user","concat","now","obj","store","createStore","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e7a7c196.chunk.js","sourcesContent":["export const CHECK_USER = \"CHECK_USER\";\r\nexport const LOG_OUT = \"LOG_OUT\";\r\nexport const ADD_LEAVE = \"ADD_LEAVE\";\r\nexport const APPROVE_LEAVE = \"APPROVE_LEAVE\";\r\nexport const REJECT_LEAVE = \"ADD_LEAVE\";\r\n\r\nexport function checkUser(credentials) {\r\n    return {\r\n        type: CHECK_USER,\r\n        payload: credentials,\r\n    }\r\n}\r\n\r\nexport function logOut() {\r\n    return {\r\n        type: LOG_OUT\r\n    }\r\n}\r\n\r\nexport function addLeave(payload) {\r\n    return {\r\n        payload,\r\n        type: ADD_LEAVE\r\n    }\r\n}\r\n\r\nexport function approveLeave(payload) {\r\n    return {\r\n        payload,\r\n        type: APPROVE_LEAVE\r\n    }\r\n}\r\n\r\nexport function rejectLeave(payload) {\r\n    return {\r\n        payload,\r\n        type: REJECT_LEAVE\r\n    }\r\n}","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport './login.css';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { checkUser } from \"../../redux/actions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default function LoginPage() {\r\n    const { isInvalidUser, loginStatus } = useSelector(state => state.loginData);\r\n    const dispatch = useDispatch();\r\n\r\n    return loginStatus ? <Redirect to=\"/home/dashboard\" /> : (\r\n        <div className=\"jumbotron\">\r\n            <div className=\"container\">\r\n                <h2 className=\"login-title\">Leave Tracking Application</h2>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 col-md-offset-4 col-sm-6 col-sm-offset-3 col-xs-8 col-xs-offset-2 login-container\">\r\n                        <div className={`alert alert-danger ${isInvalidUser ? 'invalid-alert-visible' : 'invalid-alert'}`}>{\"Invalid Username (or) Password\"}</div>\r\n                        <Formik\r\n                            initialValues={{\r\n                                username: '',\r\n                                password: ''\r\n                            }}\r\n                            validationSchema={Yup.object().shape({\r\n                                username: Yup.string()\r\n                                    .email('Enter valid username')\r\n                                    .required('Username is required'),\r\n                                password: Yup.string()\r\n                                    .min(8, 'Password should be atleast 8 characters long')\r\n                                    .required('Password is required')\r\n                            })}\r\n                            onSubmit={(values, {resetForm}) => {\r\n                                setTimeout(() => {\r\n                                    dispatch(checkUser(values));\r\n                                    resetForm();\r\n                                }, 1000);\r\n                            }}\r\n                        >\r\n                            {({ errors, touched, isSubmitting }) => (\r\n                                <Form>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Username</label>\r\n                                        <Field name=\"username\" type=\"text\" className='form-control' />\r\n                                        {touched.username && errors.username && <div className=\"error-message\" >{errors.username}</div>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Password</label>\r\n                                        <Field name=\"password\" type=\"password\" className='form-control' />\r\n                                        {touched.password && errors.password && <div className=\"error-message\" >{errors.password}</div>}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={isSubmitting}>Login</button>\r\n                                    </div>\r\n                                </Form>\r\n                            )}\r\n                        </Formik>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LoginPage from \"./login\";\r\n\r\nexport default function LoginComponent(props) {\r\n    const { loginStatus } = useSelector(state => state.loginData);\r\n\r\n    return <React.Fragment>\r\n        {loginStatus ? <Redirect to='/home/dashboard' /> : <LoginPage /> }\r\n    </React.Fragment>\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Dashboard() {\r\n    const { loggedInDetails } = useSelector(state => state.loginData);\r\n    const leavesData = useSelector(state => state.leavesData);\r\n\r\n    const pendingLeaves = leavesData.filter(leave => leave.status === \"Pending\");\r\n    const approvedLeaves = leavesData.filter(leave => leave.status === \"Approved\");\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h3 className=\"login-title\">Leave Tracking Application Dashboard</h3>\r\n            <div className=\"login-title\">{`Welcome, ${loggedInDetails.name}`}</div>\r\n            <div className=\"container dashboard-container\">\r\n                {loggedInDetails.role === \"ADMIN\" && (\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-6 col-xs-offset-4\">\r\n                        <div className=\"row\">\r\n                            <label className=\"col-xs-6\">Number of Pending Leaves</label>\r\n                            <span className=\"col-xs-6\">: {pendingLeaves.length}</span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-xs-6\">Number of Approved Leaves</label>\r\n                            <span className=\"col-xs-6\">: {approvedLeaves.length}</span>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <label className=\"col-xs-6\">Last LoggedIn</label>\r\n                            <span className=\"col-xs-6\">: {loggedInDetails.lastLogged ? loggedInDetails.lastLogged : 'Not Available'}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>)}\r\n            </div>\r\n        </div>)\r\n}","import moment from 'moment';\r\nimport React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { approveLeave } from \"../../redux/actions\";\r\n\r\nexport default function PendingLeaves() {\r\n    const leavesData = useSelector(state => state.leavesData);\r\n    const dispatch = useDispatch();\r\n\r\n    const pendingLeaves = leavesData.filter(leave => leave.status === \"Pending\");\r\n    const onApprove = (leave) => {\r\n        setTimeout(() => {\r\n            dispatch(approveLeave(leave));\r\n        }, 2000);\r\n    }\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            {(pendingLeaves && pendingLeaves.length > 0) ?\r\n            <React.Fragment>\r\n                <h3 className=\"login-title\">List of Pending Leaves</h3>\r\n                <div className=\"container pending-leaves-container\">\r\n                    <div className=\"table-responsive-xs\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Created By</th>\r\n                                    <th scope=\"col\">Leave Type</th>\r\n                                    <th scope=\"col\">From Date</th>\r\n                                    <th scope=\"col\">To Date</th>\r\n                                    <th scope=\"col\">Leave Count</th>\r\n                                    <th scope=\"col\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {pendingLeaves.map((leave, index) => {\r\n                                    return <tr key={`pending-leave-${index}`}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{leave.createdBy}</td>\r\n                                        <td>{leave.leaveType}</td>\r\n                                        <td>{moment(leave.startDate, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\")}</td>\r\n                                        <td>{moment(leave.endDate, \"YYYY-MM-DD\").format(\"DD/MM/YYYY\")}</td>\r\n                                        <td>{leave.leaveCount}</td>\r\n                                        <td>\r\n                                            <button key={`approve_${leave.createdAt}`} onClick={() => onApprove(leave)} className=\"btn btn-sm btn-primary\">\r\n                                                Approve\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            : <div className=\"login-title pending-leaves-container\">\r\n                <h3>No Pending Leaves to be approved</h3>\r\n            </div>\r\n            }\r\n        </div>)\r\n}","import moment from 'moment';\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function ApprovedLeaves() {\r\n    const leavesData = useSelector(state => state.leavesData);\r\n    const approvedLeaves = leavesData.filter(leave => leave.status === \"Approved\");\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            {(approvedLeaves && approvedLeaves.length > 0) ?\r\n            <React.Fragment>\r\n                <h3 className=\"login-title\">List of Approved Leaves</h3>\r\n                <div className=\"container approved-leaves-container\">\r\n                    <div className=\"table-responsive-xs\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Created By</th>\r\n                                    <th scope=\"col\">Leave Type</th>\r\n                                    <th scope=\"col\">From Date</th>\r\n                                    <th scope=\"col\">To Date</th>\r\n                                    <th scope=\"col\">Leave Count</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {approvedLeaves.map((leave, index) => {\r\n                                    return <tr key={`approved-leave-${index}`}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{leave.createdBy}</td>\r\n                                        <td>{leave.leaveType}</td>\r\n                                        <td>{moment(leave.startDate, \"YYYY-MM-DD\").format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{moment(leave.endDate, \"YYYY-MM-DD\").format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{leave.leaveCount}</td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            : <div className=\"login-title pending-leaves-container\">\r\n                <h3>No Approved Leaves</h3>\r\n            </div>\r\n            }\r\n        </div>)\r\n}","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { addLeave } from \"../../redux/actions\";\r\n\r\nexport default function NewLeave() {\r\n    const { loggedInDetails } = useSelector(state => state.loginData);\r\n    const [ isSuccess, setSuccess ] = useState(false);\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            <h3 className=\"login-title\">Apply for New Leave</h3>\r\n            <div className=\"container new-leave-container\">\r\n                <Formik\r\n                    initialValues={{\r\n                        leaveType: '',\r\n                        startDate: '',\r\n                        endDate: '',\r\n                        leaveCount:0\r\n                    }}\r\n                    validationSchema={Yup.object().shape({\r\n                        leaveType: Yup.string().required('Please select the leave type'),\r\n                        startDate: Yup.date().required('Start date is required'),\r\n                        endDate: Yup.date().required('End date is required'),\r\n                        leaveCount: Yup.number().notRequired()\r\n                    })}\r\n                    onSubmit={(values, { resetForm }) => {\r\n                        const {name, username} = loggedInDetails;\r\n                        dispatch(addLeave({\r\n                            username,\r\n                            ...values,\r\n                            createdBy: name,\r\n                        }));\r\n                        setSuccess(true);\r\n                        resetForm();\r\n                        setTimeout(() => {\r\n                            setSuccess(false);\r\n                        }, 10000);\r\n                    }}\r\n                >\r\n                    {({ errors, touched, setFieldValue, setFieldError, values, isValid }) => {\r\n                        const onFieldChange = (event) => {\r\n                            const { name, value } = event.target;\r\n                            const temp = {\r\n                                ...values,\r\n                                [name] : value\r\n                            }\r\n                            setFieldValue(name, value);\r\n                            if((name === \"startDate\" || name === \"endDate\")) {\r\n                                const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\r\n                                const firstDate = new Date(temp.endDate);\r\n                                const secondDate = new Date(temp.startDate);\r\n                                const diffDays = Math.round(Math.abs((firstDate - secondDate) / oneDay));\r\n                                if(secondDate.getTime() <= firstDate.getTime() && (diffDays + 1) !== values.leaveCount) {\r\n                                    setFieldValue(\"leaveCount\", diffDays + 1);\r\n                                }\r\n                            }\r\n                        }\r\n                        if(touched.endDate && touched.startDate &&!errors.startDate && new Date(values.startDate).getTime() > new Date(values.endDate).getTime()) {\r\n                            setFieldError(\"startDate\", \"Start Date should be less than End Date\");\r\n                        }\r\n                        return <Form className=\"col-xs-8 col-xs-offset-2\">\r\n                            <div className={`alert alert-success ${isSuccess ? 'invalid-alert-visible' : 'invalid-alert'}`}>{\"Leave Requested Successfully\"}</div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"col-xs-4\">Leave Type</label>\r\n                                    <div className=\"col-xs-8\">\r\n                                        <select name=\"leaveType\" value={values.leaveType} onChange={onFieldChange} className=\"form-control\">\r\n                                            <option value=\"\">-- Select Type --</option>\r\n                                            <option value=\"Earned Leave\">Earned Leave</option>\r\n                                            <option value=\"Sick Leave\">Sick Leave</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xs-6 col-xs-offset-4\">\r\n                                        {touched.leaveType && errors.leaveType && <div className=\"error-message\">{errors.leaveType}</div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"col-xs-4\">Start Date</label>\r\n                                    <div className=\"col-xs-8\">\r\n                                        <Field name=\"startDate\" type=\"date\" className='form-control' onChange={onFieldChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xs-6 col-xs-offset-4\">\r\n                                        {touched.startDate && errors.startDate && <div className=\"error-message\" >{errors.startDate}</div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"col-xs-4\">End Date</label>\r\n                                    <div className=\"col-xs-8\">\r\n                                        <Field name=\"endDate\" type=\"date\" className='form-control' onChange={onFieldChange} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-xs-6 col-xs-offset-4\">\r\n                                        {touched.endDate && errors.endDate && <div className=\"error-message\" >{errors.endDate}</div>}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row\">\r\n                                    <label className=\"col-xs-4\">Number of Leaves</label>\r\n                                    <div className=\"col-xs-8\">\r\n                                        <Field name=\"leaveCount\" type=\"number\" className='form-control' disabled/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"row text-right\">\r\n                                    <button type=\"reset\" className=\"btn btn-link\">Cancel</button>\r\n                                    <button type=\"submit\" className=\"btn btn-primary\" disabled={!isValid}>Submit</button>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    }}\r\n                </Formik>\r\n            </div>\r\n        </div>)\r\n}","import moment from 'moment';\r\nimport React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function MyLeaves() {\r\n    const { loggedInDetails } = useSelector(state => state.loginData);\r\n    const leavesData = useSelector(state => state.leavesData);\r\n\r\n    const getSortedData = () => {\r\n        const userLeaves = leavesData.filter(leave => leave.username === loggedInDetails.username);\r\n        return userLeaves.sort((a, b) => {\r\n            return new Date(a.startDate) - new Date(b.startDate); \r\n        });\r\n    }\r\n    const sortedLeavesData = getSortedData();\r\n\r\n    return (\r\n        <div className=\"jumbotron\">\r\n            {(sortedLeavesData && sortedLeavesData.length > 0) ?\r\n            <React.Fragment>\r\n                <h3 className=\"login-title\">List of Existing Leaves</h3>\r\n                <div className=\"container existing-leaves-container\">\r\n                    <div className=\"table-responsive-xs\">\r\n                        <table className=\"table\">\r\n                            <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Leave Type</th>\r\n                                    <th scope=\"col\">From Date</th>\r\n                                    <th scope=\"col\">To Date</th>\r\n                                    <th scope=\"col\">Leave Count</th>\r\n                                    <th scope=\"col\">Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {sortedLeavesData.map((leave, index) => {\r\n                                    return <tr key={`my-leave-${index}`}>\r\n                                        <th scope=\"row\">{index + 1}</th>\r\n                                        <td>{leave.leaveType}</td>\r\n                                        <td>{moment(leave.startDate, \"YYYY-MM-DD\").format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{moment(leave.endDate, \"YYYY-MM-DD\").format(\"DD-MM-YYYY\")}</td>\r\n                                        <td>{leave.leaveCount}</td>\r\n                                        <td>{leave.status}</td>\r\n                                    </tr>\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n            : <div className=\"login-title existing-leaves-container\">\r\n                <h3>No Existing Leaves for this user</h3>\r\n                <div><Link to=\"/home/new\">Click here</Link> to create a new leave</div>\r\n            </div>\r\n            }\r\n        </div>)\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Route, Switch, NavLink, Redirect } from 'react-router-dom';\r\nimport Dashboard from \"./dashboard\";\r\nimport PendingLeaves from \"./pendingLeaves\";\r\nimport ApprovedLeaves from \"./approvedLeaves\";\r\nimport './index.css';\r\nimport { logOut } from \"../../redux/actions\";\r\nimport NewLeave from \"./newLeaves\";\r\nimport MyLeaves from \"./myleaves\";\r\n\r\nexport default function HomePage() {\r\n    const { loginStatus, loggedInDetails } = useSelector(state => state.loginData);\r\n    const dispatch = useDispatch();\r\n    return (loginStatus ? (\r\n        <div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark home-nav\">\r\n            <div className=\"nav navbar-nav\">\r\n                <NavLink to=\"/home/dashboard\" className=\"nav-link\">Dashboard</NavLink>\r\n                {loggedInDetails.role === \"ADMIN\" && <>\r\n                    <NavLink to=\"/home/pending\" className=\"nav-link\">Pending Leave Requests</NavLink>\r\n                    <NavLink to=\"/home/approved\" className=\"nav-link\">Approved Leaves</NavLink>\r\n                </>}\r\n                {loggedInDetails.role === \"USER\" && <>\r\n                    <NavLink to=\"/home/existing\" className=\"nav-link\">My Leaves</NavLink>\r\n                    <NavLink to=\"/home/new\" className=\"nav-link\">New Leave</NavLink>\r\n                </>}\r\n            </div>\r\n            <div className=\"nav navbar-nav navbar-right\">\r\n                <button className=\"nav-link btn-link\" onClick={() => dispatch(logOut())}>\r\n                    <i className=\"material-icons\">logout</i>Logout\r\n                </button>\r\n            </div>\r\n        </nav>\r\n        <Switch>\r\n            <Route exact path=\"/home/dashboard\" component={Dashboard} />\r\n            <Route exact path=\"/home/pending\" component={PendingLeaves} />\r\n            <Route exact path=\"/home/approved\" component={ApprovedLeaves} />\r\n            <Route exact path=\"/home/new\" component={NewLeave} />\r\n            <Route exact path=\"/home/existing\" component={MyLeaves} />\r\n        <Redirect from=\"/home/\" to=\"/home/dashboard\" />\r\n      </Switch>\r\n    </div>) : <Redirect to=\"/login\" />)\r\n}","import './App.css';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport LoginPage from './components/login';\nimport HomePage from './components/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route path=\"/home\" component={HomePage} />\n        <Redirect from=\"/\" to=\"/login\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","export const usersList = [\r\n  {\r\n    id: 1,\r\n    name: \"Chiquita F. Jacobs\",\r\n    username: \"chiquitajacobs@gmail.com\",\r\n    password: \"chiquitaf\",\r\n    isLogged: false,\r\n    lastLogged: \"\",\r\n    role: \"ADMIN\",\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Breanna Y. Wilkerson\",\r\n    username: \"breannawilkerson@gmail.com\",\r\n    password: \"breannay\",\r\n    isLogged: false,\r\n    lastLogged: \"\",\r\n    role: \"USER\",\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Brielle F. Oneill\",\r\n    username: \"brielleoneill@gmail.com\",\r\n    password: \"briellef\",\r\n    isLogged: false,\r\n    lastLogged: \"\",\r\n    role: \"USER\",\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Bernard B. Guthrie\",\r\n    username: \"bernardguthrie@gmail.com\",\r\n    password: \"bernardb\",\r\n    isLogged: false,\r\n    lastLogged: \"\",\r\n    role: \"USER\",\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Steven S. Wilcox\",\r\n    username: \"stevenwilcox@gmail.com\",\r\n    password: \"stevensw\",\r\n    isLogged: false,\r\n    lastLogged: \"\",\r\n    role: \"USER\",\r\n  },\r\n];\r\n\r\nexport const leavesList = [\r\n  {\r\n    username: \"breannawilkerson@gmail.com\",\r\n    leaveType: \"Earned Leave\",\r\n    startDate: \"2021-01-09\",\r\n    endDate: \"2021-01-13\",\r\n    leaveCount: 4,\r\n    createdBy: \"Breanna Y. Wilkerson\",\r\n    status: \"Approved\",\r\n    createdAt: 1613332310473,\r\n  },\r\n  {\r\n    username: \"bernardguthrie@gmail.com\",\r\n    leaveType: \"Sick Leave\",\r\n    startDate: \"2021-02-04\",\r\n    endDate: \"2021-02-05\",\r\n    leaveCount: 2,\r\n    createdBy: \"Bernard B. Guthrie\",\r\n    status: \"Pending\",\r\n    createdAt: 1613332420653,\r\n  },\r\n  {\r\n    username: \"stevenwilcox@gmail.com\",\r\n    leaveType: \"Sick Leave\",\r\n    startDate: \"2021-02-10\",\r\n    endDate: \"2021-02-11\",\r\n    leaveCount: 2,\r\n    createdBy: \"Steven S. Wilcox\",\r\n    status: \"Pending\",\r\n    createdAt: 1613323220567,\r\n  },\r\n  {\r\n    username: \"stevenwilcox@gmail.com\",\r\n    leaveType: \"Earned Leave\",\r\n    startDate: \"2021-01-16\",\r\n    endDate: \"2021-01-17\",\r\n    leaveCount: 2,\r\n    createdBy: \"Steven S. Wilcox\",\r\n    status: \"Pending\",\r\n    createdAt: 1613332345623,\r\n  },\r\n  {\r\n    username: \"brielleoneill@gmail.com\",\r\n    leaveType: \"Earned Leave\",\r\n    startDate: \"2021-01-15\",\r\n    endDate: \"2021-01-20\",\r\n    leaveCount: 6,\r\n    createdBy: \"Brielle F. Oneill\",\r\n    status: \"Approved\",\r\n    createdAt: 1613332337845,\r\n  },\r\n  {\r\n    username: \"breannawilkerson@gmail.com\",\r\n    leaveType: \"Sick Leave\",\r\n    startDate: \"2021-02-09\",\r\n    endDate: \"2021-02-10\",\r\n    leaveCount: 2,\r\n    createdBy: \"Breanna Y. Wilkerson\",\r\n    status: \"Pending\",\r\n    createdAt: 1613332378326,\r\n  },\r\n];\r\n","import { CHECK_USER, LOG_OUT, ADD_LEAVE, APPROVE_LEAVE } from './actions';\r\nimport { usersList, leavesList } from './states';\r\nimport { combineReducers } from 'redux';\r\nimport moment from 'moment';\r\n\r\nconst loginData = {\r\n    users: usersList,\r\n    loginStatus: false,\r\n    loggedInDetails: {},\r\n    isInvalidUser: false,\r\n}\r\n\r\nexport let LoginReducer = (state = loginData, action) => {\r\n    switch (action.type) {\r\n        case CHECK_USER:\r\n            const { username, password } = action.payload;\r\n            const { users } = state;\r\n            const index = users.findIndex((user =>\r\n                user.username === username && user.password === password))\r\n            if (index > -1) {\r\n                const loggedInDetails = { ...users[index] };\r\n                users[index].lastLogged = moment().format('MMMM Do YYYY, h:mm:ss a');\r\n                return {\r\n                    users,\r\n                    loggedInDetails,\r\n                    loginStatus : true,\r\n                    isInvalidUser : false\r\n                }\r\n            }\r\n            return {\r\n                users,\r\n                loggedInDetails : {},\r\n                loginStatus : false,\r\n                isInvalidUser : true\r\n            }\r\n        case LOG_OUT:\r\n            return {\r\n                ...loginData,\r\n                users: state.users\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport let LeaveReducer = (state = leavesList, action) => {\r\n    switch (action.type) {\r\n        case ADD_LEAVE:\r\n            return state.concat({\r\n                ...action.payload,\r\n                status: 'Pending',\r\n                createdAt: Date.now()\r\n            });\r\n        case APPROVE_LEAVE:\r\n            const temp = [ ...state ];\r\n            const index = temp.findIndex(obj => obj.createdAt === action.payload.createdAt);\r\n            if(index > -1) {\r\n                temp[index].status = 'Approved';\r\n            }\r\n            return temp;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allReducers = combineReducers({\r\n    loginData: LoginReducer,\r\n    leavesData: LeaveReducer,\r\n})","import { createStore } from 'redux';\r\nimport { allReducers } from './reducers';\r\n\r\nexport let store = createStore(allReducers);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}